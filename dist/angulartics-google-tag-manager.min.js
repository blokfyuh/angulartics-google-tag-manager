!function(angular){"use strict";angular.module("angulartics.google.tagmanager",["angulartics"]).config(["$analyticsProvider",function($analyticsProvider){function dimensionsAndMetrics(properties){for(var customData={},idx=1;idx<=200;idx++)customData["dimension"+idx]=void 0!==properties["dimension"+idx]?properties["dimension"+idx]:null,customData["metric"+idx]=void 0!==properties["metric"+idx]?properties["metric"+idx]:null;return customData}function eventTrack(action,properties){var dataLayer=window.dataLayer=window.dataLayer||[];properties=properties||{};var dimsAndMets=dimensionsAndMetrics(properties);dataLayer.push(angular.extend({event:properties.event||"interaction",target:properties.category,action:action,"target-properties":properties.label,value:properties.value,"interaction-type":properties.noninteraction,userId:$analyticsProvider.settings.ga.userId},dimsAndMets))}$analyticsProvider.settings.ga={userId:null},$analyticsProvider.registerPageTrack(function(path,$location,resolvedData){var dataLayer=window.dataLayer=window.dataLayer||[],pushData=function(resource){dataLayer.push({event:"content-view","content-name":path,userId:$analyticsProvider.settings.ga.userId,dimension3:resource&&_.isFunction(resource.getAnalyticsDimension)?resource.getAnalyticsDimension("who"):void 0})};if(resolvedData&&resolvedData.resource&&resolvedData.resource.$promise)return resolvedData.resource.$promise.then(function(resource){pushData(resource)});pushData()}),$analyticsProvider.registerEventTrack(eventTrack),$analyticsProvider.registerExceptionTrack(function(error,cause){eventTrack(error.toString(),{category:"Exceptions",label:error.stack})}),$analyticsProvider.registerSetUsername(function(userId){$analyticsProvider.settings.ga.userId=userId})}])}(angular);
//# sourceMappingURL=../dist/angulartics-google-tag-manager.min.js.map